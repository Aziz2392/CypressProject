{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 2,
    "pending": 0,
    "failures": 1,
    "start": "2023-11-15T02:18:47.048Z",
    "end": "2023-11-15T02:18:50.009Z",
    "duration": 2961,
    "testsRegistered": 3,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ad21929e-bb21-4b09-8615-c8efab9c62d5",
      "title": "",
      "fullFile": "cypress/e2e/integration/05-assertions.cy.js",
      "file": "cypress/e2e/integration/05-assertions.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d944e760-5d17-43af-a17b-65caef234177",
          "title": "Cypress Assertions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Default Assertions",
              "fullTitle": "Cypress Assertions Default Assertions",
              "timedOut": null,
              "duration": 1302,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// This will fail if the page doesn't send text/html with a 200 status\ncy.visit('https://techglobal-training.com/frontend');\ncy.get('.cards').contains('Html Elements').click();\ncy\n// there is a default assertion that this\n// button must exist in the DOM before proceeding\n.get('#register_button')\n// since cypress internally checks if the web element on the dom tree or not\n// we dont need to do below assertion\n// .should('be.visible')\n// before issuing the click, this button must be \"actioanable\"\n// it connat be covered, ordisabled,  hidden from the view.\n.click();\n// This will fail if the element os not typable.\ncy.get('#text_input1').type('TechGlobal');",
              "err": {},
              "uuid": "6f77826d-ba44-4c2b-aa1b-c02c8ad0426a",
              "parentUUID": "d944e760-5d17-43af-a17b-65caef234177",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Implicit Assertions",
              "fullTitle": "Cypress Assertions Implicit Assertions",
              "timedOut": null,
              "duration": 882,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://techglobal-training.com/frontend');\ncy.get('.cards').contains('Html Elements').click();\n// Any assertion we do using .should() method, is an \"Implicit Assertion\"\n// be.visible checks if the web element displayed on the UI\ncy.get('#main_heading').should('be.visible');\n// This assertion checks if the subjected elements visible text is equal to 'Html Elements'\ncy.get('#main_heading').should('have.text', 'Html Elements');\n// This assertion checks if the subjected elements visible text is contains 'Html Elements'\ncy.get('#main_heading').should('contain.text', 'Elements');\ncy.get('#main_heading').should('include.text', 'Elements');\ncy.url().should('eq', 'https://techglobal-training.com/frontend/html-elements');\ncy.title().should('eq', 'TechGlobal Training | Html Elements');\n// have.attr chainer checks the elements attribute property\n// it can get 2, or 3 arguments, we can validate if element has specific attribute, and the value of it\ncy.get('#main_heading').should('have.attr', 'id');\ncy.get('#main_heading').should('have.attr', 'id', 'main_heading');\ncy.get('#facebook_link').should('have.attr', 'href', 'https://www.facebook.com/techglobaleducation');\n// 'have.length' validates how many web elements our locator returns\ncy.get('[id*=\"paragraph\"]').should('have.length', 2);\ncy.get('#hello_paragraph').should('have.length', 1);\n// be.enabled checks if the web element is interactable\ncy.get('#checkbox_1').should('be.enabled');\n// be.checked checks if the web element is checked\ncy.get('#checkbox_1').should('not.be.checked');\n// have.css validates the css property and its value in css\ncy.get('[id*=\"paragraph\"]').should('have.css', 'color', 'rgb(105, 105, 105)');\ncy.get('[id*=\"paragraph\"]').should('have.css', 'padding', '0px');\n// cy.get('#hello_paragraph').should('have.text', 'Hello World!')\n// cy.get('#hello_paragraph').should('have.attr', 'id', 'hello_paragraph')\n// cy.get('#hello_paragraph').should('be.visible')\ncy.get('#hello_paragraph').should('have.text', 'Hello World!').and('have.attr', 'id', 'hello_paragraph').and('be.visible');",
              "err": {},
              "uuid": "4c23b2bb-a8c6-4118-b088-37a2b62c7913",
              "parentUUID": "d944e760-5d17-43af-a17b-65caef234177",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6f77826d-ba44-4c2b-aa1b-c02c8ad0426a",
            "4c23b2bb-a8c6-4118-b088-37a2b62c7913"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2184,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e4026b51-1058-419e-b795-48ae96e14d23",
          "title": "Cypress Assertions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Default Assertions",
              "fullTitle": "Cypress Assertions Default Assertions",
              "timedOut": null,
              "duration": 689,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"/05-assertions.cy.js/Cypress Assertions -- Default Assertions (failed).png\"\n    ]\n  ]\n}",
              "code": "cy.visit(cy.visit('https://techglobal-training.com/frontend'));\ncy.get('.cards').contains('Html Elements').click();\ncy.contains('Checkboxes').nextAll().as('checkboxElements');\nconst checkboxText = ['Apple', 'Microsoft', 'Tesla'];\ncy.get('@checkboxElements').each(($el, index) => {\n  expect($el.text()).to.equal(checkboxText[index]);\n  expect($el).to.be.visible;\n});",
              "err": {
                "message": "CypressError: `cy.visit()` must be called with a `url` or an `options` object containing a `url` as its 1st argument\n\nhttps://on.cypress.io/visit",
                "estack": "CypressError: `cy.visit()` must be called with a `url` or an `options` object containing a `url` as its 1st argument\n\nhttps://on.cypress.io/visit\n    at Context.visit (https://techglobal-training.com/__cypress/runner/cypress_runner.js:130831:70)\n    at wrapped (https://techglobal-training.com/__cypress/runner/cypress_runner.js:138510:43)\nFrom Your Spec Code:\n    at Context.eval (webpack://cypressproject/./cypress/e2e/integration/05-assertions.cy.js:105:19)",
                "diff": null
              },
              "uuid": "1cd9ede4-9703-4179-9729-c91f69f633aa",
              "parentUUID": "e4026b51-1058-419e-b795-48ae96e14d23",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "1cd9ede4-9703-4179-9729-c91f69f633aa"
          ],
          "pending": [],
          "skipped": [],
          "duration": 689,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/reports/html/.jsons"
      },
      "version": "6.2.0"
    }
  }
}